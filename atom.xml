<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘哈哈的碎碎念</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liuyangzuo.github.io/"/>
  <updated>2017-10-06T18:23:43.880Z</updated>
  <id>http://liuyangzuo.github.io/</id>
  
  <author>
    <name>刘哈哈</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>http/https相关</title>
    <link href="http://liuyangzuo.github.io/2017/09/23/httphttps/"/>
    <id>http://liuyangzuo.github.io/2017/09/23/httphttps/</id>
    <published>2017-09-22T16:00:00.000Z</published>
    <updated>2017-10-06T18:23:43.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTTP-相关"><a href="#HTTP-相关" class="headerlink" title="HTTP 相关"></a>HTTP 相关</h2><h4 id="1-http-一些通用的header"><a href="#1-http-一些通用的header" class="headerlink" title="1.http 一些通用的header"></a>1.http 一些通用的header</h4><h4 id="2-302／304-一些重要的状态码"><a href="#2-302／304-一些重要的状态码" class="headerlink" title="2.302／304 一些重要的状态码"></a>2.302／304 一些重要的状态码</h4><h4 id="3-缓存相关Cache-Control／Exprires"><a href="#3-缓存相关Cache-Control／Exprires" class="headerlink" title="3.缓存相关Cache-Control／Exprires"></a>3.缓存相关Cache-Control／Exprires</h4><h4 id="4-安全相关的header（Content-security-Policy）"><a href="#4-安全相关的header（Content-security-Policy）" class="headerlink" title="4.安全相关的header（Content security Policy）"></a>4.安全相关的header（Content security Policy）</h4><h4 id="5-一些安全相关的概念-XSS-CSRF-http劫持-DNS劫持"><a href="#5-一些安全相关的概念-XSS-CSRF-http劫持-DNS劫持" class="headerlink" title="5.一些安全相关的概念 XSS/CSRF/http劫持/DNS劫持"></a>5.一些安全相关的概念 XSS/CSRF/http劫持/DNS劫持</h4><h2 id="HTTPS相关"><a href="#HTTPS相关" class="headerlink" title="HTTPS相关"></a>HTTPS相关</h2><h3 id="1-https-概述"><a href="#1-https-概述" class="headerlink" title="1.https 概述"></a>1.https 概述</h3><h3 id="2-https-验证原理"><a href="#2-https-验证原理" class="headerlink" title="2.https 验证原理"></a>2.https 验证原理</h3><h3 id="3-SSL中，公钥，私钥，证书介绍"><a href="#3-SSL中，公钥，私钥，证书介绍" class="headerlink" title="3.SSL中，公钥，私钥，证书介绍"></a>3.SSL中，公钥，私钥，证书介绍</h3><h3 id="4-数字签名-数字证书"><a href="#4-数字签名-数字证书" class="headerlink" title="4.数字签名  数字证书"></a>4.数字签名  数字证书</h3><h3 id="5-对称加密-非对称加密-哈希加密"><a href="#5-对称加密-非对称加密-哈希加密" class="headerlink" title="5.对称加密/非对称加密/哈希加密"></a>5.对称加密/非对称加密/哈希加密</h3><h3 id="6-openssl-生成公钥，私钥"><a href="#6-openssl-生成公钥，私钥" class="headerlink" title="6.openssl 生成公钥，私钥"></a>6.openssl 生成公钥，私钥</h3><h3 id="7-正向代理／反向代理-还会介绍node-http-proxy"><a href="#7-正向代理／反向代理-还会介绍node-http-proxy" class="headerlink" title="7.正向代理／反向代理 还会介绍node http proxy"></a>7.正向代理／反向代理 还会介绍node http proxy</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTTP-相关&quot;&gt;&lt;a href=&quot;#HTTP-相关&quot; class=&quot;headerlink&quot; title=&quot;HTTP 相关&quot;&gt;&lt;/a&gt;HTTP 相关&lt;/h2&gt;&lt;h4 id=&quot;1-http-一些通用的header&quot;&gt;&lt;a href=&quot;#1-http-一些通用的hea
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack知识梳理</title>
    <link href="http://liuyangzuo.github.io/2017/08/06/webpack%E6%A2%B3%E7%90%86/"/>
    <id>http://liuyangzuo.github.io/2017/08/06/webpack梳理/</id>
    <published>2017-08-05T16:00:00.000Z</published>
    <updated>2017-09-12T17:52:52.000Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=27955658&auto=1&height=66"></iframe><h3 id="d"><a href="#d" class="headerlink" title="d"></a>d</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>node-http-proxy学习笔记</title>
    <link href="http://liuyangzuo.github.io/2017/07/15/node-http-proxy/"/>
    <id>http://liuyangzuo.github.io/2017/07/15/node-http-proxy/</id>
    <published>2017-07-14T16:00:00.000Z</published>
    <updated>2017-09-10T12:57:45.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Preact Router实现原理</title>
    <link href="http://liuyangzuo.github.io/2017/07/01/Preact%20Router%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    <id>http://liuyangzuo.github.io/2017/07/01/Preact Router实现原理/</id>
    <published>2017-06-30T16:00:00.000Z</published>
    <updated>2017-10-06T18:39:08.686Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Preact源码分析</title>
    <link href="http://liuyangzuo.github.io/2017/06/12/Preact%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://liuyangzuo.github.io/2017/06/12/Preact源码分析/</id>
    <published>2017-06-11T16:00:00.000Z</published>
    <updated>2017-10-06T17:35:52.482Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-基本知识"><a href="#1-基本知识" class="headerlink" title="1.基本知识"></a>1.基本知识</h2><h3 id="1-1-JSX简介"><a href="#1-1-JSX简介" class="headerlink" title="1.1 JSX简介"></a>1.1 JSX简介</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>() &#123;</div><div class="line">    <span class="keyword">super</span>();</div><div class="line">  &#125;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (&lt;div&gt;APP&lt;/div&gt;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="1-2-Vnode-hyperscript-Rreact-CreateElement-h-babel简介"><a href="#1-2-Vnode-hyperscript-Rreact-CreateElement-h-babel简介" class="headerlink" title="1.2 Vnode hyperscript/Rreact.CreateElement/h/babel简介"></a>1.2 Vnode hyperscript/Rreact.CreateElement/h/babel简介</h3><h3 id="1-3-0-Preact-h-‘div’-children-Preact-h-‘div’-children-区别"><a href="#1-3-0-Preact-h-‘div’-children-Preact-h-‘div’-children-区别" class="headerlink" title="1.3 (0,Preact.h)(‘div’,{},[children])  /  Preact.h(‘div’,{},[children])区别"></a>1.3 (0,Preact.h)(‘div’,{},[children])  /  Preact.h(‘div’,{},[children])区别</h3><h2 id="2-Preact-Component"><a href="#2-Preact-Component" class="headerlink" title="2.Preact  Component"></a>2.Preact  Component</h2><h3 id="2-1-Preact-Component-实例-Stateless-Component-Dump-Component-Smart-Component简介"><a href="#2-1-Preact-Component-实例-Stateless-Component-Dump-Component-Smart-Component简介" class="headerlink" title="2.1 Preact Component 实例/ Stateless Component / Dump Component/ Smart Component简介"></a>2.1 Preact Component 实例/ Stateless Component / Dump Component/ Smart Component简介</h3><h3 id="2-2-Component基类实现-自定义Compotent和基类的关系-Stateless-Component如何实现"><a href="#2-2-Component基类实现-自定义Compotent和基类的关系-Stateless-Component如何实现" class="headerlink" title="2.2 Component基类实现/自定义Compotent和基类的关系/Stateless Component如何实现"></a>2.2 Component基类实现/自定义Compotent和基类的关系/Stateless Component如何实现</h3><h3 id="2-3-Component细节，state-props-dirty-disable"><a href="#2-3-Component细节，state-props-dirty-disable" class="headerlink" title="2.3 Component细节，state? props? dirty? disable?"></a>2.3 Component细节，state? props? dirty? disable?</h3><h2 id="3-初次渲染"><a href="#3-初次渲染" class="headerlink" title="3 初次渲染"></a>3 初次渲染</h2><h3 id="3-1-TextNode-DOM-Node-Preact-Component-构建简介"><a href="#3-1-TextNode-DOM-Node-Preact-Component-构建简介" class="headerlink" title="3.1 TextNode/DOM Node/Preact Component 构建简介"></a>3.1 TextNode/DOM Node/Preact Component 构建简介</h3><h3 id="3-2-Preact-Component-构建细节-buildComponentFromVNode-setComponentProps-renderComponent"><a href="#3-2-Preact-Component-构建细节-buildComponentFromVNode-setComponentProps-renderComponent" class="headerlink" title="3.2 Preact Component 构建细节(buildComponentFromVNode, setComponentProps, renderComponent)"></a>3.2 Preact Component 构建细节(buildComponentFromVNode, setComponentProps, renderComponent)</h3><h3 id="3-3-Preact-Component-与DOM如何建立映射-innerDiffNode"><a href="#3-3-Preact-Component-与DOM如何建立映射-innerDiffNode" class="headerlink" title="3.3 Preact Component 与DOM如何建立映射(innerDiffNode)"></a>3.3 Preact Component 与DOM如何建立映射(innerDiffNode)</h3><h3 id="3-4-事件处理-style-class-dangerouslySetInnerHTML"><a href="#3-4-事件处理-style-class-dangerouslySetInnerHTML" class="headerlink" title="3.4 事件处理/ style/class/dangerouslySetInnerHTML"></a>3.4 事件处理/ style/class/dangerouslySetInnerHTML</h3><h2 id="4-更新渲染-setState"><a href="#4-更新渲染-setState" class="headerlink" title="4.更新渲染(setState)"></a>4.更新渲染(setState)</h2><h3 id="4-1-diff原则和机制介绍"><a href="#4-1-diff原则和机制介绍" class="headerlink" title="4.1 diff原则和机制介绍"></a>4.1 diff原则和机制介绍</h3><h3 id="4-2-更新DOM细节"><a href="#4-2-更新DOM细节" class="headerlink" title="4.2 更新DOM细节"></a>4.2 更新DOM细节</h3><h3 id="4-3-更新attributes细节"><a href="#4-3-更新attributes细节" class="headerlink" title="4.3 更新attributes细节"></a>4.3 更新attributes细节</h3><h2 id="5-setStatex细节"><a href="#5-setStatex细节" class="headerlink" title="5.setStatex细节"></a>5.setStatex细节</h2><h3 id="5-1同步？异步？forceUpdate-no-render"><a href="#5-1同步？异步？forceUpdate-no-render" class="headerlink" title="5.1同步？异步？forceUpdate? no render?"></a>5.1同步？异步？forceUpdate? no render?</h3><h2 id="6-卸载"><a href="#6-卸载" class="headerlink" title="6.卸载"></a>6.卸载</h2><h3 id="6-1-DOM卸载"><a href="#6-1-DOM卸载" class="headerlink" title="6.1 DOM卸载"></a>6.1 DOM卸载</h3><h3 id="6-2-Preact-Component卸载"><a href="#6-2-Preact-Component卸载" class="headerlink" title="6.2 Preact Component卸载"></a>6.2 Preact Component卸载</h3><h2 id="7-生命周期实现"><a href="#7-生命周期实现" class="headerlink" title="7.生命周期实现"></a>7.生命周期实现</h2><h3 id="7-1生命周期介绍"><a href="#7-1生命周期介绍" class="headerlink" title="7.1生命周期介绍"></a>7.1生命周期介绍</h3><h3 id="7-2生命周期实现细节"><a href="#7-2生命周期实现细节" class="headerlink" title="7.2生命周期实现细节"></a>7.2生命周期实现细节</h3><h2 id="8-番外"><a href="#8-番外" class="headerlink" title="8.番外"></a>8.番外</h2><h3 id="8-1递归diffLevel-hydrating-svg"><a href="#8-1递归diffLevel-hydrating-svg" class="headerlink" title="8.1递归diffLevel/hydrating/svg"></a>8.1递归diffLevel/hydrating/svg</h3><h3 id="8-2options-hook"><a href="#8-2options-hook" class="headerlink" title="8.2options hook"></a>8.2options hook</h3><h3 id="8-3性能相关-splitText"><a href="#8-3性能相关-splitText" class="headerlink" title="8.3性能相关 splitText ?"></a>8.3性能相关 splitText ?</h3><h3 id="8-4组件回收collectComponent"><a href="#8-4组件回收collectComponent" class="headerlink" title="8.4组件回收collectComponent"></a>8.4组件回收collectComponent</h3><h2 id="9-总结-图解"><a href="#9-总结-图解" class="headerlink" title="9.总结/图解"></a>9.总结/图解</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-基本知识&quot;&gt;&lt;a href=&quot;#1-基本知识&quot; class=&quot;headerlink&quot; title=&quot;1.基本知识&quot;&gt;&lt;/a&gt;1.基本知识&lt;/h2&gt;&lt;h3 id=&quot;1-1-JSX简介&quot;&gt;&lt;a href=&quot;#1-1-JSX简介&quot; class=&quot;headerlink
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React swipe实现</title>
    <link href="http://liuyangzuo.github.io/2017/06/07/react%20swipe%E5%AE%9E%E7%8E%B0/"/>
    <id>http://liuyangzuo.github.io/2017/06/07/react swipe实现/</id>
    <published>2017-06-06T16:00:00.000Z</published>
    <updated>2017-09-10T06:34:12.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>jsBridge杂谈</title>
    <link href="http://liuyangzuo.github.io/2017/01/05/jsBridge%E6%9D%82%E8%B0%88/"/>
    <id>http://liuyangzuo.github.io/2017/01/05/jsBridge杂谈/</id>
    <published>2017-01-04T16:00:00.000Z</published>
    <updated>2017-09-10T12:21:33.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>socket.io学习笔记</title>
    <link href="http://liuyangzuo.github.io/2016/12/20/socket.io%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://liuyangzuo.github.io/2016/12/20/socket.io学习笔记/</id>
    <published>2016-12-19T16:00:00.000Z</published>
    <updated>2017-09-10T12:57:14.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Promise技巧</title>
    <link href="http://liuyangzuo.github.io/2016/12/12/Promise%E6%8A%80%E5%B7%A7/"/>
    <id>http://liuyangzuo.github.io/2016/12/12/Promise技巧/</id>
    <published>2016-12-11T16:00:00.000Z</published>
    <updated>2017-09-10T06:20:58.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Redux实现原理</title>
    <link href="http://liuyangzuo.github.io/2016/11/20/redux%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    <id>http://liuyangzuo.github.io/2016/11/20/redux实现原理/</id>
    <published>2016-11-19T16:00:00.000Z</published>
    <updated>2017-09-10T06:34:15.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React Motion</title>
    <link href="http://liuyangzuo.github.io/2016/10/20/React%20Motion/"/>
    <id>http://liuyangzuo.github.io/2016/10/20/React Motion/</id>
    <published>2016-10-19T16:00:00.000Z</published>
    <updated>2017-09-10T06:35:06.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ReactCSSTransitionGroup</title>
    <link href="http://liuyangzuo.github.io/2016/09/10/ReactCSSTransitionGroup/"/>
    <id>http://liuyangzuo.github.io/2016/09/10/ReactCSSTransitionGroup/</id>
    <published>2016-09-09T16:00:00.000Z</published>
    <updated>2017-10-06T18:29:12.291Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Toggle = React.createClass(&#123;</div><div class="line">  render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span>(</div><div class="line">      &lt;div&gt;</div><div class="line">        &lt;ReactCSSTransitionGroup</div><div class="line">         transitionName=<span class="string">"toggle"</span></div><div class="line">         transitionEnterTimeout=&#123;<span class="number">300</span>&#125;</div><div class="line">         transitionLeaveTimeout=&#123;<span class="number">300</span>&#125;&gt;</div><div class="line">            &#123;</div><div class="line">              <span class="keyword">this</span>.props.hidden ? <span class="literal">null</span> :</div><div class="line">              &lt;div className=<span class="string">"toggle-base"</span>&gt;&#123;<span class="keyword">this</span>.props.children&#125;&lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">            &#125;</span></div><div class="line"><span class="regexp">        &lt;/</span>ReactCSSTransitionGroup&gt;    </div><div class="line">      &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;);</span></div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Container = React.createClass(&#123;</div><div class="line">  getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      hidden : <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  onClick: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">hidden</span>: !<span class="keyword">this</span>.state.hidden&#125;);</div><div class="line">  &#125;,</div><div class="line">  render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span>(</div><div class="line">      &lt;div className=<span class="string">"g-row m-index"</span>&gt;</div><div class="line">        &lt;div onClick=&#123;<span class="keyword">this</span>.onClick&#125;&gt;Click me1&lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">        &lt;Toggle hidden=&#123;this.state.hidden&#125;&gt;I am toggle&lt;/</span>Toggle&gt;</div><div class="line">        &lt;div&gt;Something <span class="keyword">else</span>.&lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">      &lt;/</span>div&gt;</div><div class="line">      )</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.toggle-base</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.toggle-enter</span> &#123;</div><div class="line">  <span class="attribute">animation-name</span>: fade-in;</div><div class="line">  <span class="attribute">animation-duration</span>: <span class="number">300ms</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.toggle-leave</span> &#123;</div><div class="line">  <span class="attribute">animation-name</span>: fade-out;</div><div class="line">  <span class="attribute">animation-duration</span>: <span class="number">300ms</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">keyframes</span> fade-in &#123;</div><div class="line">  <span class="selector-tag">from</span> &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0.0</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-tag">to</span> &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">1.0</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">@<span class="keyword">keyframes</span> fade-out &#123;</div><div class="line">  <span class="selector-tag">from</span> &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">1.0</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-tag">to</span> &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0.0</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React-infinite-scroll 实现原理</title>
    <link href="http://liuyangzuo.github.io/2016/09/03/react-infinite-scroll%20%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    <id>http://liuyangzuo.github.io/2016/09/03/react-infinite-scroll 实现原理/</id>
    <published>2016-09-02T16:00:00.000Z</published>
    <updated>2017-09-10T06:34:22.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React &amp;&amp; Decorator</title>
    <link href="http://liuyangzuo.github.io/2016/08/05/React&amp;&amp;decorator/"/>
    <id>http://liuyangzuo.github.io/2016/08/05/React&amp;&amp;decorator/</id>
    <published>2016-08-04T16:00:00.000Z</published>
    <updated>2017-09-10T13:04:16.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React Hoc</title>
    <link href="http://liuyangzuo.github.io/2016/07/02/React%20Hoc/"/>
    <id>http://liuyangzuo.github.io/2016/07/02/React Hoc/</id>
    <published>2016-07-01T16:00:00.000Z</published>
    <updated>2017-09-10T13:03:58.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React 一些概念</title>
    <link href="http://liuyangzuo.github.io/2016/06/07/React%20%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5/"/>
    <id>http://liuyangzuo.github.io/2016/06/07/React 一些概念/</id>
    <published>2016-06-06T16:00:00.000Z</published>
    <updated>2017-09-10T12:08:25.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>gulp笔记</title>
    <link href="http://liuyangzuo.github.io/2016/05/10/gulp%E7%AC%94%E8%AE%B0/"/>
    <id>http://liuyangzuo.github.io/2016/05/10/gulp笔记/</id>
    <published>2016-05-09T16:00:00.000Z</published>
    <updated>2017-09-10T06:32:52.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS3动画</title>
    <link href="http://liuyangzuo.github.io/2016/03/12/css3%E5%8A%A8%E7%94%BB/"/>
    <id>http://liuyangzuo.github.io/2016/03/12/css3动画/</id>
    <published>2016-03-11T16:00:00.000Z</published>
    <updated>2017-09-10T12:19:30.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hisototy API</title>
    <link href="http://liuyangzuo.github.io/2016/02/05/hisototy%20API/"/>
    <id>http://liuyangzuo.github.io/2016/02/05/hisototy API/</id>
    <published>2016-02-04T16:00:00.000Z</published>
    <updated>2017-10-06T18:39:16.261Z</updated>
    
    <content type="html"><![CDATA[<p> histoty提供创建三种类型的方法<br>  兼容低端浏览器的createHashHistory，<br>  现代化浏览器的createBrowserHistory，<br>  React Native使用的createMemoryHistory</p><p>  @1<br>  低版本浏览器使用#hash来改变url并且浏览器不会刷新<br>  主要用到hashchange事件<br>    低版本还有一个有意思事情<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> history = createHashHistory(&#123;</div><div class="line">  hashType: <span class="string">'slash'</span> <span class="comment">// the default</span></div><div class="line">&#125;)</div><div class="line">history.push(<span class="string">'/home'</span>) <span class="comment">// #/home</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">const</span> history = createHashHistory(&#123;</div><div class="line">    hashType: <span class="string">'noslash'</span> <span class="comment">// Omit the leading slash</span></div><div class="line">&#125;)</div><div class="line">history.push(<span class="string">'/home'</span>) <span class="comment">// #home</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">const</span> history = createHashHistory(&#123;</div><div class="line">  hashType: <span class="string">'hashbang'</span> <span class="comment">// Google's legacy AJAX URL format</span></div><div class="line">&#125;)</div><div class="line">history.push(<span class="string">'/home'</span>) <span class="comment">//  #!/home</span></div></pre></td></tr></table></figure></p><p>  @2<br>  现代化的浏览器增加了history API<br>  主要使用pushState来改变url</p><p>  SPA 实现的原理就是 component和对应的URL映射<br>  高级的SPA还是加上异步组件，async目的就是在首屏不会加载过多资源，<br>  而是当URL改变时在发出异步请求，请求对应的component.js</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; histoty提供创建三种类型的方法&lt;br&gt;  兼容低端浏览器的createHashHistory，&lt;br&gt;  现代化浏览器的createBrowserHistory，&lt;br&gt;  React Native使用的createMemoryHistory&lt;/p&gt;
&lt;p&gt;  @1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>移动端图片上传</title>
    <link href="http://liuyangzuo.github.io/2016/01/12/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    <id>http://liuyangzuo.github.io/2016/01/12/移动端图片上传/</id>
    <published>2016-01-11T16:00:00.000Z</published>
    <updated>2017-10-06T18:15:38.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="移动端上传图片流程"><a href="#移动端上传图片流程" class="headerlink" title="移动端上传图片流程"></a>移动端上传图片流程</h2><h3 id="input标签监听change事件"><a href="#input标签监听change事件" class="headerlink" title="- input标签监听change事件"></a>- input标签监听change事件</h3><h3 id="使用FileReader对象"><a href="#使用FileReader对象" class="headerlink" title="- 使用FileReader对象"></a>- 使用FileReader对象</h3><h3 id="使用Image对象"><a href="#使用Image对象" class="headerlink" title="- 使用Image对象"></a>- 使用Image对象</h3><h3 id="读取img"><a href="#读取img" class="headerlink" title="- 读取img"></a>- 读取img</h3><h3 id="可以用canvas压缩"><a href="#可以用canvas压缩" class="headerlink" title="- 可以用canvas压缩"></a>- 可以用canvas压缩</h3><h3 id="使用Blob对象写入数据"><a href="#使用Blob对象写入数据" class="headerlink" title="- 使用Blob对象写入数据"></a>- 使用Blob对象写入数据</h3><h3 id="使用FormData对象append-Blob对象"><a href="#使用FormData对象append-Blob对象" class="headerlink" title="- 使用FormData对象append Blob对象"></a>- 使用FormData对象append Blob对象</h3><h3 id="使用XMLHttpRequest发送"><a href="#使用XMLHttpRequest发送" class="headerlink" title="- 使用XMLHttpRequest发送"></a>- 使用XMLHttpRequest发送</h3><h2 id="手机端预览"><a href="#手机端预览" class="headerlink" title="手机端预览"></a>手机端预览</h2><h3 id="预览"><a href="#预览" class="headerlink" title="- 预览"></a>- 预览</h3><h3 id="HTML-部分"><a href="#HTML-部分" class="headerlink" title="HTML 部分"></a>HTML 部分</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"preview-wraper"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"preview"</span> <span class="attr">src</span>=<span class="string">""</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"ipt"</span> <span class="attr">type</span>=<span class="string">"file"</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="JS-部分"><a href="#JS-部分" class="headerlink" title="JS 部分"></a>JS 部分</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">var</span> ipt = <span class="built_in">document</span>.getElementById(<span class="string">"ipt"</span>);</div><div class="line"> <span class="keyword">var</span> previewer = <span class="built_in">document</span>.getElementById(<span class="string">"preview"</span>);</div><div class="line"> <span class="keyword">var</span> formdata = <span class="keyword">new</span> FormData();</div><div class="line"> <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line"> <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();</div><div class="line"> </div><div class="line">  ipt.addEventListener(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; </div><div class="line">    <span class="comment">// 单个图片</span></div><div class="line">    <span class="keyword">var</span> file = <span class="keyword">this</span>.files[<span class="number">0</span>];</div><div class="line">    </div><div class="line">    <span class="comment">// 请求地址</span></div><div class="line">    xhr.open(<span class="string">"POST"</span>,<span class="string">"/upload"</span>);</div><div class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span> (xhr.readyState === XMLHttpRequest.DONE ) &#123;</div><div class="line">            <span class="comment">// 成功</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">// 异步读取文件</span></div><div class="line">    reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="comment">// 存储读取结果</span></div><div class="line">      <span class="keyword">var</span> result = <span class="keyword">this</span>.result;</div><div class="line">      <span class="keyword">var</span> img = <span class="keyword">new</span> Image();</div><div class="line">      </div><div class="line">      <span class="comment">// 异步读取图片</span></div><div class="line">      img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        </div><div class="line">        <span class="comment">// 对图片进行压缩</span></div><div class="line">        <span class="keyword">var</span> compressedDataUrl = compress(img, file.type);</div><div class="line">        <span class="keyword">var</span> blob = dataURLtoBlob(compressedDataUrl);</div><div class="line">          </div><div class="line">        <span class="comment">// 写入formdata (name, value, file.name);</span></div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'image.'</span> + (file.type).split(<span class="string">'/'</span>)[<span class="number">1</span>])</div><div class="line">        formdata.append(<span class="string">'image'</span>, blob, <span class="string">'image.'</span> + (file.type).split(<span class="string">'/'</span>)[<span class="number">1</span>]);</div><div class="line">        </div><div class="line">        <span class="comment">// 发功请求</span></div><div class="line">        xhr.send(formdata);</div><div class="line">        </div><div class="line">        <span class="comment">//手机预览</span></div><div class="line">        toPreviewer(result);</div><div class="line">  </div><div class="line">        <span class="comment">// 清空</span></div><div class="line">        img = <span class="literal">null</span>;</div><div class="line">  </div><div class="line">      &#125;</div><div class="line">      <span class="comment">// 写入图片</span></div><div class="line">      img.src = result;</div><div class="line">    &#125;;</div><div class="line">    <span class="comment">// 读取文件</span></div><div class="line">    reader.readAsDataURL(file);</div><div class="line">    </div><div class="line">  &#125;)</div><div class="line"></div><div class="line"><span class="comment">// 使用canvas压缩 是否旋转</span></div><div class="line"><span class="keyword">var</span> compress = <span class="function"><span class="keyword">function</span>(<span class="params">img, fileType</span>)</span>&#123;</div><div class="line">  </div><div class="line">  <span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>);</div><div class="line">  <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</div><div class="line"></div><div class="line">  <span class="keyword">var</span> width = img.width;</div><div class="line">  <span class="keyword">var</span> height = img.height;</div><div class="line">  <span class="comment">/*</span></div><div class="line"><span class="comment">  if(rotate) &#123;</span></div><div class="line"><span class="comment">      canvas.width = height;</span></div><div class="line"><span class="comment">      canvas.height = width;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">  &#125;else &#123;</span></div><div class="line"><span class="comment">      canvas.width = width;</span></div><div class="line"><span class="comment">      canvas.height = height;</span></div><div class="line"><span class="comment">  &#125;</span></div><div class="line"><span class="comment">  if (rotate) &#123;</span></div><div class="line"><span class="comment">      ctx.translate(canvas.width * 0.5, canvas.height * 0.5);</span></div><div class="line"><span class="comment">      ctx.rotate(Math.PI * 0.5);</span></div><div class="line"><span class="comment">      ctx.translate(-canvas.height * 0.5, -canvas.width * 0.5);</span></div><div class="line"><span class="comment">  &#125;</span></div><div class="line"><span class="comment">  */</span></div><div class="line">  </div><div class="line">  canvas.width = width;</div><div class="line">  canvas.height = height;</div><div class="line">  ctx.fillStyle = <span class="string">"#fff"</span>;</div><div class="line">  ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</div><div class="line">  ctx.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, width, height);</div><div class="line">  <span class="keyword">var</span> base64data = canvas.toDataURL(fileType, <span class="number">0.3</span>);</div><div class="line">  canvas = ctx = <span class="literal">null</span>;</div><div class="line">  <span class="keyword">return</span> base64data;</div><div class="line">&#125;</div><div class="line">     </div><div class="line"></div><div class="line"> </div><div class="line"><span class="comment">// 转化成Blob</span></div><div class="line"><span class="keyword">var</span> dataURLtoBlob = <span class="function"><span class="keyword">function</span>(<span class="params">dataurl</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = dataurl.split(<span class="string">','</span>), </div><div class="line">        mime = arr[<span class="number">0</span>].match(<span class="regexp">/:(.*?);/</span>)[<span class="number">1</span>],</div><div class="line">        bstr = atob(arr[<span class="number">1</span>]), n = bstr.length, </div><div class="line">        u8arr = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(n);</div><div class="line">        </div><div class="line">    <span class="keyword">while</span> (n--) &#123;</div><div class="line">        u8arr[n] = bstr.charCodeAt(n);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Blob([u8arr], &#123;<span class="attr">type</span>: mime&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 手机预览</span></div><div class="line"><span class="keyword">var</span> toPreviewer = <span class="function"><span class="keyword">function</span>(<span class="params">dataUrl</span>) </span>&#123;</div><div class="line">  previewer.src = dataUrl;</div><div class="line">  ipt.value = <span class="string">''</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="NodeJS-服务部分"><a href="#NodeJS-服务部分" class="headerlink" title="NodeJS 服务部分"></a>NodeJS 服务部分</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">  使用express服务</span></div><div class="line"><span class="comment">  multer库是 Node.js middleware for handling `multipart/form-data`</span></div><div class="line"><span class="comment">  cors 解决跨域问题，实际并没有用到，源码比较简单，就是处理了一下HTTP的头部</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</div><div class="line"><span class="keyword">var</span> multer  = <span class="built_in">require</span>(<span class="string">'multer'</span>)</div><div class="line"><span class="keyword">var</span> cors = <span class="built_in">require</span>(<span class="string">'cors'</span>)</div><div class="line"></div><div class="line"><span class="keyword">var</span>  imageFilter = <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</div><div class="line">    <span class="comment">// 图片过滤</span></div><div class="line">    <span class="keyword">if</span> (!file.originalname.match(<span class="regexp">/\.(jpg|jpeg|png|gif)$/</span>)) &#123;</div><div class="line">        <span class="keyword">return</span> cb(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Only image files are allowed!'</span>), <span class="literal">false</span>);</div><div class="line">    &#125;</div><div class="line">    cb(<span class="literal">null</span>, <span class="literal">true</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> storage = multer.diskStorage(&#123;</div><div class="line">  <span class="comment">// 存储路径</span></div><div class="line">  destination: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</div><div class="line">    cb(<span class="literal">null</span>, <span class="string">'./uploads'</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 处理文件名</span></div><div class="line">  filename:<span class="function"><span class="keyword">function</span>(<span class="params">req,file,cb</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> splits = file.originalname.split(<span class="string">'.'</span>);</div><div class="line">    <span class="keyword">var</span> suffix = splits[splits.length - <span class="number">1</span>];</div><div class="line">    cb(<span class="literal">null</span>,file.fieldname + <span class="string">'-'</span> + <span class="built_in">Date</span>.now() + <span class="string">'.'</span> + suffix);</div><div class="line">  &#125;,</div><div class="line">  fileFilter: imageFilter</div><div class="line">&#125;)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> upload = multer(&#123; <span class="attr">storage</span>: storage &#125;)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> app = express();</div><div class="line">app.use(cors());</div><div class="line"></div><div class="line"><span class="comment">// 处理上传请求</span></div><div class="line">app.post(<span class="string">'/upload'</span>, upload.single(<span class="string">'image'</span>), <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">  <span class="comment">// req.file is the `avatar` file</span></div><div class="line">  <span class="comment">// req.body will hold the text fields, if there were any</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// 访问根路径 </span></div><div class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">  res.sendFile(<span class="string">'index.html'</span>, &#123;<span class="attr">root</span>: __dirname &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">app.listen(<span class="number">7777</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;移动端上传图片流程&quot;&gt;&lt;a href=&quot;#移动端上传图片流程&quot; class=&quot;headerlink&quot; title=&quot;移动端上传图片流程&quot;&gt;&lt;/a&gt;移动端上传图片流程&lt;/h2&gt;&lt;h3 id=&quot;input标签监听change事件&quot;&gt;&lt;a href=&quot;#input标签监
      
    
    </summary>
    
    
  </entry>
  
</feed>
